# The world folder to run
WORLD=world

# The port the server runs on 
PORT=3000

# The secret the server uses to create/parse json web tokens
JWT_SECRET=hyper

# The code used to become admin in the world (type /admin <code> in chat)
# If left blank, everyone is an admin!
ADMIN_CODE=

# How often the world saves (seconds) 
# Can be set to 0 to disable saving
SAVE_INTERVAL=60

# Whether players should collide with other players
PUBLIC_PLAYER_COLLISION=false

# The maximum upload file size for models etc (mb)
PUBLIC_MAX_UPLOAD_SIZE=12

# The public web socket url the client connects to
PUBLIC_WS_URL=ws://localhost:3000/ws

# The public url used by clients to access api (eg upload assets)
PUBLIC_API_URL=http://localhost:3000/api

# The public url used by clients to fetch assets
PUBLIC_ASSETS_URL=http://localhost:3000/assets

# LiveKit (voice chat)
LIVEKIT_WS_URL=
LIVEKIT_API_KEY=
LIVEKIT_API_SECRET=

# ==============================================
# DATABASE CONFIGURATION
# ==============================================
# Configure your database connection here.
# 
# Supported databases:
# - SQLite (default - no configuration needed)
# - PostgreSQL via DB_URL
#
# If DB_URL is not provided, SQLite will be used automatically.

# Database connection URL - leave empty for SQLite
# For PostgreSQL, use format: postgres://username:password@host:port/database
DB_URL=

# ==============================================
# STORAGE CONFIGURATION
# ==============================================
# Configure your file storage system here.
# 
# Supported storage types:
# - Local file system (default - no configuration needed)
# - S3-compatible storage (AWS S3, CloudFlare R2, DigitalOcean Spaces, etc.)
#
# For S3 storage, use STORAGE_URL with format: s3://bucket-name/assets/

# S3 storage URL - leave empty for local file storage
STORAGE_URL=

# AWS credentials (required when using S3)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY= 
